<?php

namespace CollabCorp\LaravelImmigrations\Tests;


use CollabCorp\LaravelImmigrations\Contracts\Writer;
use CollabCorp\LaravelImmigrations\Facades\Immigrations;
use CollabCorp\LaravelImmigrations\LaravelImmigrationsServiceProvider;
use CollabCorp\LaravelImmigrations\Testing\ImmigrationFake;
use CollabCorp\LaravelImmigrations\Testing\WriterFake;
use Orchestra\Testbench\TestCase;

class RunningRegisteredImmigrationsTest extends TestCase
{
	/**
	 * @var WriterFake
	 */
	protected $writerFake;

	protected function getPackageProviders($app)
	{
		return [LaravelImmigrationsServiceProvider::class];
	}

	/**
	 * Define environment setup.
	 *
	 * @param  \Illuminate\Foundation\Application $app
	 * @return void
	 */
	protected function getEnvironmentSetUp($app)
	{
		// Setup the "old_database", the default from database.
		$app['config']->set('database.connections.old_database', [
			'driver' => 'sqlite',
			'database' => ':memory:',
			'prefix' => '',
		]);
	}

	protected function setUp()
	{
		parent::setUp(); // TODO: Change the autogenerated stub

		$this->app->instance(Writer::class, $this->writerFake = new WriterFake);
	}

	/** @test */
	public function itRunsTheRegisteredImmigrations()
	{
		Immigrations::register([$one = new ImmigrationFake]);

		Immigrations::run();

		$this->assertTrue($one->executed);
	}

	/** @test */
	public function itWritesTheMigrationsItRan()
	{
		Immigrations::register(ImmigrationFake::class);

		Immigrations::run();

		$this->writerFake->assertWritten('info', function (string $message) {
			$class = ImmigrationFake::class;

			return $message === "running immigration [{$class}].";
		});
	}
}